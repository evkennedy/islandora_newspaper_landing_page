<?php
/**
 * @file
 * Hooks and callbacks for this module.
 */

// Includes functions for connecting to Solr and Luke.
//require_once dirname(__FILE__) . '/includes/luke.inc';

function islandora_newspaper_landing_page_menu() {
  $items = array();
  $items['islandora/object/%islandora_object/newspaper_about'] = array(
    'weight' => -3,
    'title' => 'About',
    'page callback' => 'islandora_newspaper_landing_page_view',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_newspaper_landing_page_access',
    'access arguments' => array(2),
  );
  /*
  $items['admin/islandora/newspaper'] = array(
    'title' => 'Newspaper Collection',
    'description' => 'Configure the Newspaper Solution Pack.',
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer site configuration'),
    'page arguments' => array('islandora_newspaper_admin_settings_form'),
    'file' => 'includes/admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  */
  $items['admin/islandora/landing_page'] = array(
    'title' => 'Newspaper Landing Page',
    'description' => 'Configure the Newspaper Landing Page.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_newspaper_landing_page_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'islandora_newspaper_landing_page.admin.inc',
    //'type' => MENU_LOCAL_TASK,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['landing_page/autocomplete_luke'] = array(
    'title' => 'Islandora Newspaper Landing Page Luke autocomplete',
    'description' => 'Autocomplete callback to populate solr text fields.',
    'page callback' => '_islandora_solr_autocomplete_luke',
    'access arguments' => array('administer islandora solr'),
    'file' => 'includes/admin.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Determines whether or not to show this modules tab.
 *
 * @global object $user
 * @param FedoraObject $fedora_object
 * @return boolean
 */
function islandora_newspaper_landing_page_access($fedora_object) {
  if (!isset($fedora_object)) {
    return FALSE;
  }

  $models = $fedora_object->models;

  // Show tab if MODS datastream exists and has newspaperCModel relationship.
  if (isset($fedora_object['MODS']) AND in_array("islandora:newspaperCModel", $models, TRUE)) {
    return TRUE;
  }

  return FALSE;
}

/**
 * Theme registry function.
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function islandora_newspaper_landing_page_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_newspaper_landing_page_view' => array(
      'template' => 'theme/islandora-newspaper-landing-page',
      'variables' => array('islandora_objects' => NULL),
    ),
  );
}

/**
 * The newspaper landing page view.
 *
 * @param FedoraObject $object
 * @return string
 */
function islandora_newspaper_landing_page_view($object) {
  $output = theme('islandora_newspaper_landing_page_view', array('islandora_object' => $object));
  return $output;
}

/**
 * Preprocess hook.
 *
 * @param array $variables
 * @global string $base_url
 */
function islandora_newspaper_landing_page_preprocess_islandora_newspaper_landing_page_view(&$variables) {
  global $base_url;

  // Include islandora_newspaper.inc for use of utility functions.
  module_load_include('inc', 'islandora_newspaper', 'includes/utilities');

  // Include custom javascript to handle the read more link.
  drupal_add_js(drupal_get_path('module', 'islandora_newspaper_landing_page') . '/js/read-more.js');

  $islandora_object = $variables['islandora_object'];
  $mods = $islandora_object['MODS']->content;

  if ($mods) {
    $mods_doc = new DOMDocument();
    $mods_doc->loadXML($mods);
    $mods_xpath = new DOMXPath($mods_doc);
    $mods_xpath->registerNamespace('m', 'http://www.loc.gov/mods/v3');

    // Extract MODS data for use.
    $variables['mods']['title'] = $mods_xpath->evaluate('string(//m:mods/m:titleInfo/m:title)');
    $variables['mods']['non_sort'] = $mods_xpath->evaluate('string(//m:mods/m:titleInfo/m:nonSort)');
    $variables['mods']['place'] = $mods_xpath->evaluate('string(//m:mods/m:originInfo/m:place/m:placeTerm)');
    $variables['mods']['geographic'] = $mods_xpath->evaluate('string(//m:mods/m:subject/m:geographic)');
    $variables['mods']['topic'] = $mods_xpath->evaluate('string(//m:mods/m:subject/m:topic)');
    $variables['mods']['temporal'] = $mods_xpath->evaluate('string(//m:mods/m:subject/m:temporal)');
    $variables['mods']['publisher'] = $mods_xpath->evaluate('string(//m:mods/m:originInfo/m:publisher)');
    $variables['mods']['pubDate'] = date('F d, Y', strtotime($mods_xpath->evaluate('string(//m:mods/m:originInfo/m:dateIssued[@point="start"])')));
    $variables['mods']['frequency'] = $mods_xpath->evaluate('string(//m:mods/m:originInfo/m:frequency[@authority="marcfrequency"])');
    $variables['mods']['language'] = $mods_xpath->evaluate('string(//m:mods/m:language[@type="text"])');
    $variables['mods']['note'] = $mods_xpath->evaluate('string(//m:mods/m:note[not(@*)])');
    $variables['mods']['issn'] = $mods_xpath->evaluate('string(//m:mods/m:identifier[@type="issn"])');
    $variables['mods']['credit'] = $mods_xpath->evaluate('string(//m:mods/m:note[@type="credit"])');
    $variables['mods']['prospectus'] = $mods_xpath->evaluate('string(//m:mods/m:note[@type="prospectus"])');

    $pre_titles = $mods_xpath->evaluate('//m:mods/m:relatedItem[@type="preceding"]/m:titleInfo/m:title');
    foreach ($pre_titles as $item) {
      if ($item->nodeValue)
        $variables['mods']['preceding'][] = $item->nodeValue;
    }
    $suc_titles = $mods_xpath->evaluate('//m:mods/m:relatedItem[@type="succeeding"]/m:titleInfo/m:title');
    foreach ($suc_titles as $item) {
      if ($item->nodeValue)
        $variables['mods']['succeeding'][] = $item->nodeValue;
    }
  }

  // Set page title, with non sort if available.
  drupal_set_title($variables['mods']['non_sort'] != "" ? $variables['mods']['non_sort'] . " " . $variables['mods']['title'] : $variables['mods']['title']);

  // If a thumbnail of the object exists, use it, else use default folder image.
  if (isset($islandora_object['TN'])) {
    $variables['front_cover_image'] = $base_url . "/islandora/object/$islandora_object->id/datastream/TN";
  }
  else {
    $variables['front_cover_image'] = $base_url . '/' . drupal_get_path('module', 'islandora_newspaper_landing_page') . '/images/folder.png';
  }

  $issues = array_keys(islandora_newspaper_get_issues($islandora_object));
  if ($issues) {
    $num_issues = count($issues);
    $variables['num_issues'] = $num_issues;
    $variables['first_issue_path'] = $base_url . "/islandora/object/" . $issues[0];
    $variables['last_issue_path'] = $base_url . "/islandora/object/" . $issues[$num_issues - 1];
  }

  $sort_field = variable_get('islandora_newspaper_landing_page_sort_field', 'PARENT_dateIssued_dt');
  $sort_order = variable_get('islandora_newspaper_landing_page_sort_order', 'asc');

  $variables['front_pages_path'] = $base_url . "/islandora/search/PARENT_title_mt%3A%28$islandora_object->label%29%20AND%20RELS_EXT_isPageNumber_literal_ms%3A1?sort=$sort_field%20$sort_order";
  $variables['view_path'] = $base_url . "/islandora/object/" . $islandora_object->id;
}

/**
 * Implements hook_block_info().
 */
function islandora_newspaper_landing_page_block_info() {

  $blocks['history'] = array(
    'info' => t('This Day in History'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['alphabetnews'] = array(
    'info' => t('Alphabetical Newspapers'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['social'] = array(
    'info' => t('Social Media'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function islandora_newspaper_landing_page_block_view($delta = '') {
  global $base_url;
  $block = array();
  date_default_timezone_set('America/Halifax');

  switch ($delta) {
    case 'history':
      // Get date formats.
      $date = date_create(date('d-m-Y'));
      $history_date = date_format(date_sub($date, date_interval_create_from_date_string("100 years")), "Y-m-d");
      $history_date_full = date_format($date, "F d, Y");
      $history_date_time = $history_date . "T00:00:00Z";

      // Solr query.
      $solr_handler = variable_get('islandora_solr_request_handler', FALSE);
      $namespaces_enforced = variable_get('islandora_namespace_restriction_enforced', FALSE);
      $path_parts = parse_url(variable_get('islandora_solr_url', 'localhost:8080/solr'));
      $solr = new Apache_Solr_Service($path_parts['host'], $path_parts['port'], $path_parts['path'] . '/');
      $solr->setCreateDocuments(0);
      $cmodel = $solr->escape('islandora:newspaperIssueCModel');
      $history_date_time = $solr->escape($history_date_time);
      $solr_query = "content_model_ms:$cmodel AND mods_originInfo_dateIssued_dt:$history_date_time";
      $solr_params = array();
      $solr_params['fl'][] = "PID, mods_originInfo_dateIssued_dt, mods_titleInfo_nonSort_ms, mods_titleInfo_title_ms";
      $solr_params['sort'] = array('mods_originInfo_dateIssued_dt' . ' asc');

      if ($solr_handler) {
        $solr_params['qt'] = $solr_handler;
      }

      if ($namespaces_enforced) {
        $namespace_list = trim(variable_get('islandora_pids_allowed', ''));
        if ($namespace_list) {
          $namespaces = preg_split('/[,|\s]/', $namespace_list);
          $namespace_array = array();
          foreach (array_filter($namespaces) as $namespace) {
            $namespace_array[] = 'PID:' . Apache_Solr_Service::escape($namespace) . '*';
          }
          $solr_params['fq'][] = implode(' OR ', $namespace_array);
        }
      }

      try {
        $start = 0;
        $max_results = 5;
        $method = 'GET';
        $results = $solr->search($solr_query, $start, $max_results, $solr_params, $method);
      }
      catch (Exception $e) {
        watchdog('islandora_newspaper_landing_page', 'Error getting solr results %e',
          array('%e' => $e->getMessage()));
      }

      $solr_results = NULL;
      if (!empty($results)) {
        $solr_results = json_decode($results->getRawResponse(), TRUE);
      }

      $block['subject'] = t('This Day in History');

      if ($solr_results['response']['docs']) {

        // Choose random result if more than 1 newspaper have issues for this day.
        $random_pick = array_rand($solr_results['response']['docs']);
        $new_pid = $solr_results['response']['docs'][$random_pick]['PID'];
        $title = $solr_results['response']['docs'][$random_pick]['mods_titleInfo_nonSort_ms'][0] . " " . $solr_results['response']['docs'][0]['mods_titleInfo_title_ms'][0];

        // Get the random object selected.
        $object = islandora_object_load($new_pid);

        if($object) {
          $path =  $base_url . "/islandora/object/$new_pid";
          if (isset($object['TN'])) {
            $thumb = $base_url . "/islandora/object/$new_pid/datastream/TN";

            $block['content'] =
              "<div class=\"block-body\">
                <a href = \"$path\"><img src = \"$thumb\"><br/>$title</a><br/>$history_date_full
              </div>";
          }
          else {
            $block['content'] = "<div class=\"block-body\"><a href = \"$path\">$title</a><br/>$history_date_full</div>";
          }
        }
      }
      else
        $block['content'] = "<div class = \"block-body\">Content not available.</div>";

    break;

    case "social":

      $block['subject'] = t('Social Media');

      /* Add social media icons
      $block['content'] .=
      "<br/>
      <div class=\"social-icons\">
        <a href=\"http://peinewspapers.tumblr.com/\" tumblr-icon=\"&#62230;\"></a>
        <a href=\"https://twitter.com/peinewspapers\" twitter-icon=\"&#62217;\"></a>
        <a href=\"https://www.facebook.com/dailynewspaperpei\" facebook-icon=\"&#62222;\"></a>
      </div>";
      */

      // Add social media images
      $image_dir = $base_url . '/' . drupal_get_path('module', 'islandora_newspaper_landing_page') . '/images/';

      $block['content'] =
        "<div class=\"social-icons\">
          <a href=\"http://peinewspapers.tumblr.com/\"><img src=$image_dir" . 'tumblr.png' . " /></a>
          <a href=\"https://twitter.com/peinewspapers\"><img src=" . $base_url . '/' . drupal_get_path('module', 'islandora_newspaper_landing_page') . '/images/twitter.png' . " /></a>
          <a href=\"https://www.facebook.com/dailynewspaperpei\"><img src=" . $base_url . '/' . drupal_get_path('module', 'islandora_newspaper_landing_page') . '/images/facebook.png' . " /></a>
        </div>";

    break;
  }
  return $block;
}

